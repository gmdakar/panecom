<?php

use Drupal\user\Entity\User;
use Drupal\Core\Url;

/**
 * Implements hook_entity_type_alter().
 * Alterons dynamiquement les urls des terms de taxonomy afin de les faire correspondre aux filtres de recherche
 */
function mytools_entity_type_alter(array &$entity_types) {

 /* foreach(['date','horaires'] as $vid) {
    if (isset($entity_types['taxonomy_term'][$vid])) {
      $entity_types['taxonomy_term'][$vid]['uri_callback'] = 'mytools_uri_taxonomy_term_date';
    }
  }*/

  // Unset the canonical link template for node content type and
  // replace with a uri callback.
  // Unsetting the uri template is necessary for the uri callbacks to work.
  $entity_types['taxonomy_term']->setUriCallback('mytools_taxonomy_uri');
  $links = $entity_types['taxonomy_term']->get('links');
  unset($links['canonical']);
  $entity_types['taxonomy_term']->set('links', $links);
}

/**
 * Bundle URI callback, all other content types outside of "redirect".
 */
function mytools_taxonomy_uri($term) {
 /*return new Url('entity.taxonomy_term.canonical', array(
    'taxonomy_term' => $term ->id(),
  ));*/
  $termobj = taxonomy_term_load($term ->id());
  $vid = $termobj->vid;
	if ($vid == 'date') 
		return Url::fromRoute('view.agenda.page_1', ['field_date_target_id[]' => $term ->id()]);
	elseif ($vid == 'horaires') 
		return Url::fromRoute('view.agenda.page_1', ['field_horaire_target_id[]' => $term ->id()]);
}