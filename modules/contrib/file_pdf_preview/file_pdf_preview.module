<?php

/**
 * @file
 * Contains file_pdf_preview.module.
 */

use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\file\FileInterface;
use Drupal\file_pdf_preview\Plugin\Field\FieldWidget\FilePdfPreviewWidget;

/**
 * Implements hook_help().
 */
function file_pdf_preview_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the file_pdf_preview module.
    case 'help.page.file_pdf_preview':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provide a FieldWidget to generate a preview image from a PDF file') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_entity_presave().
 */
function file_pdf_preview_entity_presave(EntityInterface $entity) {
  if (!$entity instanceof ContentEntityInterface) {
    return;
  }
  _file_pdf_preview_presave_entity($entity);
}

function _file_pdf_preview_presave_entity(ContentEntityInterface $entity) {
  /** @var \Drupal\Core\TempStore\PrivateTempStoreFactory $temp_store_factory */
  $temp_store_factory = \Drupal::service('tempstore.private');
  $temp_store = $temp_store_factory->get('file_pdf_preview');
  $key = $entity->getEntityTypeId() . ':' . $entity->uuid();
  $values = $temp_store->get($key);
  if (empty($values)) {
    return;
  }
  $file = !empty($values['file']) ? $values['file'] : NULL;
  $target_field_name = !empty($values['target_field_name']) ? $values['target_field_name'] : '';
  $force_save = !empty($values['force_save']);
  if ($file instanceof FileInterface && $target_field_name) {
    if ($entity->hasField($target_field_name)) {
      $should_save = $force_save || $entity->get($target_field_name)->isEmpty();
    }
    else {
      $should_save = FALSE;
    }
    if ($should_save) {
      $target_values = [
        'target_id' => $file->id(),
        'alt' => $file->getFilename(),
      ];
      $entity->set($target_field_name, $target_values);
    }
  }
  try {
    $temp_store->delete($key);
  }
  catch (Exception $e) {
    \Drupal::logger('file_pdf_preview')->error($e->getMessage());
  }
}
