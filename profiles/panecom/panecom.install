<?php

use Drupal\Core\Utility\UpdateException;
use Symfony\Component\Process\Process;
use Symfony\Component\Process\Exception\ProcessFailedException;

/**
* Implements hook_install_tasks().
*/
function panecom_install_tasks(&$install_state) {
	
		
	// Here, we define a variable to allow tasks to indicate that a particular,
  // processor-intensive batch process needs to be triggered later on in the
  // installation.
  $panecom_needs_batch_processing = \Drupal::state()
    ->get('panecom.needs_batch_processing', FALSE);
	
  $tasks = array(
   
    // This is an example of a task that performs batch operations. To
    // implement this task, your profile would define a function named
    // panecom_batch_processing() which returns a batch API array definition
    // that the installer will use to execute your batch operations. Due to the
    // 'panecom.needs_batch_processing' variable used here, this task will be
    // hidden and skipped unless your profile set it to TRUE in one of the
    // previous tasks.
    'panecom_batch_processing' => array(
      'display_name' => t('Import additional data'),
      'display' => $panecom_needs_batch_processing,
      'type' => 'batch',
      'run' => $panecom_needs_batch_processing ? INSTALL_TASK_RUN_IF_NOT_COMPLETED : INSTALL_TASK_SKIP,
    ),
    // This is an example of a task that will not be displayed in the list that
    // the user sees. To implement this task, your profile would define a
    // function named panecom_final_site_setup(), in which additional,
    // automated site setup operations would be performed. Since this is the
    // last task defined by your profile, you should also use this function to
    // call \Drupal::state()->delete('panecom.needs_batch_processing') and
    // clean up the state that was used above. If you want the user to pass
    // to the final Drupal installation tasks uninterrupted, return no output
    // from this function. Otherwise, return themed output that the user will
    // see (for example, a confirmation page explaining that your profile's
    // tasks are complete, with a link to reload the current page and therefore
    // pass on to the final Drupal installation tasks when the user is ready to
    // do so).
    'panecom_final_site_setup' => array(),
  );
  return $tasks;
	 

}

function panecom_final_site_setup(){
    //use instead the existing files_save directory.
		$process = new Process('chmod -R 775 sites/default/ || true && rm -rf sites/default/files || true && mv sites/default/files_save sites/default/files || true');
		//$process = new Process('drush dcdi');
		$process->setTimeout(0);
		$process->run();

		// executes after the command finishes
		if (!$process->isSuccessful()) {
			throw new ProcessFailedException($process);
		}

		//echo $process->getOutput();
		
	
	\Drupal::state()->delete('panecom.needs_batch_processing');
}